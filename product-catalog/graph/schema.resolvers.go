package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"micro-store/product-catalog/graph/model"
)

// CreateProduct is the resolver for the createProduct field.
func (r *mutationResolver) CreateProduct(ctx context.Context, product model.NewProduct) (*model.Product, error) {
	p := model.Product{
		ID:          "ID",
		Name:        "Product",
		Description: "None",
		Price:       10.0,
	}
	return &p, nil
}

// AddProductStock is the resolver for the addProductStock field.
func (r *mutationResolver) AddProductStock(ctx context.Context, input model.AddProductStock) (bool, error) {
	return true, nil
}

// Products is the resolver for the products field.
func (r *queryResolver) Products(ctx context.Context) ([]*model.Product, error) {
	arr := make([]*model.Product, 0)
	p := model.Product{
		ID:          "ID",
		Name:        "Product",
		Description: "None",
		Price:       10.0,
	}
	arr = append(arr, &p)
	return arr, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
