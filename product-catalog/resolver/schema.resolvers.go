package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"
	"micro-store/product-catalog/generated"
	"micro-store/product-catalog/models"
)

// CreateProduct is the resolver for the createProduct field.
func (r *mutationResolver) CreateProduct(ctx context.Context, product models.NewProduct) (*models.Product, error) {
	panic(fmt.Errorf("not implemented: CreateProduct - createProduct"))
}

// AddProductStock is the resolver for the addProductStock field.
func (r *mutationResolver) AddProductStock(ctx context.Context, input models.AddProductStock) (bool, error) {
	panic(fmt.Errorf("not implemented: AddProductStock - addProductStock"))
}

// Products is the resolver for the products field.
func (r *queryResolver) Products(ctx context.Context) ([]*models.Product, error) {
	panic(fmt.Errorf("not implemented: Products - products"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
